#!/bin/bash

# Cek apakah file CSV diberikan
if [ $# -lt 2 ]; then
    echo "Usage: $0 <file.csv> --option [args]"
    exit 1
fi

FILE=$1
OPTION=$2

# Cek apakah file ada
if [ ! -f "$FILE" ]; then
    echo "Error: File '$FILE' not found!"
    exit 1
fi

# Fungsi untuk melihat ringkasan data
summary_info() {
    echo "Summary of $FILE"
    highest_usage=$(awk -F',' 'NR>1 {if($2>max){max=$2;name=$1}} END {print name " with " max "%"}' "$FILE")
    highest_raw=$(awk -F',' 'NR>1 {if($3>max){max=$3;name=$1}} END {print name " with " max " uses"}' "$FILE")
    echo "Highest Adjusted Usage: $highest_usage"
    echo "Highest Raw Usage: $highest_raw"
}

# Fungsi untuk sorting
sort_by_column() {
    column=$1
    header=$(head -n 1 "$FILE")
    sort_column=$(head -n 1 "$FILE" | awk -F',' "{for(i=1;i<=NF;i++) if(\$i==\"$column\") print i}")
    if [ -z "$sort_column" ]; then
        echo "Error: Column '$column' not found!"
        exit 1
    fi
    echo "$header"
    tail -n +2 "$FILE" | sort -t',' -k${sort_column}nr
}

# Fungsi untuk mencari nama Pokemon
search_pokemon() {
    name=$1
    header=$(head -n 1 "$FILE")
    echo "$header"
    grep -i "^$name," "$FILE" | sort -t',' -k2nr
}

# Fungsi untuk filter berdasarkan Type
filter_by_type() {
    type=$1
    header=$(head -n 1 "$FILE")
    echo "$header"
    awk -F',' -v type="$type" 'NR==1 || tolower($4)==tolower(type) || tolower($5)==tolower(type)' "$FILE" | sort -t',' -k2nr
}

# Fungsi untuk menampilkan bantuan dengan ASCII art
show_help() {
    cat << "EOF"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++#%%@@@%%%*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++*#@@@@@@%%%%%%@@@@@@#*+++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++#@@@#-:           ..-*@@@%+++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++@@%-                   ..+@@%+++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++@@%    .      .++++..      :@@#++++++++++++++++++++++++++++++++++++++++++++++++++
++++++#@%          -@@@@@@@@* .    =@@*+++++++++++++++++++++++++++++++++++++++++++++++++
++++++@@*      ::   ++..  =@@=      @@*+++++++++++++++++++++++++++++++++++++++++++++++++
++++++@@+     :@@#      -=@@@-      %@@+++++++++++++++++++++++++++++++++++++++++++++++++
++++++@@+  ..  =* .  -@@@@@%.       *@@+++++++++++++++++++++++++++++++++++++++++++++++++
++++++@@+        .    ..-%@@@:      *@@+++++++++++++++++++++++++++++++++++++++++++++++++
++++++@@%     :%%:        :@@#      *@%+++++++++++++++++++++++++++++++++++++++++++++++++
++++++*@@- .  :@@#:@@#   .%@@=    . @@#+++++++++++++++++++++++++++++++++++++++++++++++++
+++++++%@%.    ::. =@@@@@@@@=      =@@*+++++++++++++++++++++++++++++++++++++++++++++++++
+++++++*@@#.    .    .:++::       :@@%++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++*@@@*.              .   .%@@#+++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++*%@@@@+..       ...    =@@*++++++++++++++++++++++++++++++++++++++++++++++++++*
+++++++++++++*#%@@@@@@@@@@@@@.   .%@#++++++++++++++++++++++++++++++++++++++++++++++++++*
+++++++++++++++++++++++++++%@@-   -@@*++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++*@@*. .%@%++*+++++++***********************************+***+
++++++++++++++++++++++++++++++%@@+. %@**********************%@@@@#**********************
++++++++++++++++++++++++++*****+%@@@@@@*********####******%@@*+*@@@#********************
++++++++++++++++++++++*************##********#@@@@@@@@@@@@@@.    :@@%**#@@#*************
+++++++++++++++++****************************@@. .  *-.           =@@*@@@@@@************
+++++++++***********************************%@#   .-:             -@@@@:  #@%***********
++******************************************#@@.  #@@.        ==   *@@#   -@%***********
************+*++++++++++++++++++++++++++++++*@@#  +*.  :#:   -@@:  .==.   #@%***********
+++++++++++++++++++++++++++++++++++++++++++++@@. :@@@-=@@%.  :#:          #@@*+++++*****
++++++++++++++++++++++++++++++++++++++++++++%@@.  .#@@@@@@@@@@@%.    .     :%@@*++++++++
+++++++++++++++++++++++++++++++++++++++++++*@@:.        .-+**+:       .      :@@++++++++
++++++++++++===============================%@#                       .        #@#+++++++
===========================================*@@- .              .  . .         -@@+++++++
============================================*@@+.              ..             -@@=======
===============================--------------=%@@@#:.        .       . .      =@@**=====
==========--------------------------------------=%@@=                         %@%##+====
--------------------------------------------------#@@.                       #@@#*======
-------------------------------------------------=%@@.                      -@@####*====
-------------------------------------------------=#@@-           .     .   -@@%######+--
---------------------::::::::::::::::::::::::::-=##@@#            . .:+%@@@@@########=--
-----------::::::::::::::::::::::::::::::::::::+####@@@#+*#+      +@@@@@%%#########+----
----:::::::::::::::::::::::::::::::::::::::::::=######%@@@@@@. ..#@@%###########*=------
:::::::::::::::::::::::::::::::::::::::::::::::::+#########%@@@@@@@##########+----------
::::::::::::::::::::::::::::::::::::::::::::::::::::-+*###############*+=-::::----------
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-----
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::---
EOF
    echo "Usage: $0 <file.csv> --option [args]"
    echo "Options:"
    echo "  --info              Show summary of the data"
    echo "  --sort <column>     Sort the data based on the given column"
    echo "  --grep <name>       Search for a Pokemon by name"
    echo "  --filter <type>     Filter Pokemon by type"
}

# Handle opsi
case "$OPTION" in
    --info)
        summary_info
        ;;
    --sort)
        if [ -z "$3" ]; then
            echo "Error: Please provide a column name to sort by."
            exit 1
        fi
        sort_by_column "$3"
        ;;
    --grep)
        if [ -z "$3" ]; then
            echo "Error: Please provide a Pokemon name to search."
            exit 1
        fi
        search_pokemon "$3"
        ;;
    --filter)
        if [ -z "$3" ]; then
            echo "Error: Please provide a type to filter by."
            exit 1
        fi
        filter_by_type "$3"
        ;;
    --help)
        show_help
        ;;
    *)
        echo "Error: Invalid option '$OPTION'"
        exit 1
        ;;
esac
